{"version":3,"file":"aca9be08-6fbff80519eb7af70fde.js","mappings":"uNAaA,MAAMA,EAA0B,CAC9B,CACEC,SAAU,cACVC,OAAQ,OAEV,CACED,SAAU,uBACVC,OAAQ,UAPZ,oNAWA,SACE,MAAMC,GAAUC,EAAAA,EAAAA,IAAI,CAClBC,SAAU,SACVC,UAAW,OACX,2BAA4B,CAC1BC,QAAU,OAAMC,EAAAA,KAChBC,UAAW,aACX,CAACC,EAAAA,EAAAA,IAAQ,CAAED,UAAW,aAAcE,SAAU,WAAWC,MAAO,OAAOC,IAAK,SAE9E,iCAAkC,CAChCN,QAAU,OAAMO,EAAAA,MAGlBC,gBAAkB,OAAMC,EAAAA,KACxBC,iBAAkB,YAClBC,qBAAsB,QACtBC,mBAAoB,uBACpBC,eAAgB,OAhBC,yBAmBbC,EAAY,EAKZC,EAAS,EAITC,GAAgBnB,EAAAA,EAAAA,IAAI,CACxBoB,gBAAiB,QACjBb,SAAU,WACVN,SAAU,SACVoB,MAAO,MACPC,OAAQ,SACRC,QAAS,OACTC,aAAc,OACdC,UACE,+EACFC,aAAc,OAEd,CAACpB,EAAAA,EAAAA,IAAQ,CAAEe,MAAO,OAAQpB,SAAU,SAAUsB,QAAS,SAZhC,yBAenBI,GAAc3B,EAAAA,EAAAA,IAAI,CACtB4B,MAAOA,EAAAA,EAAAA,QAAAA,KACPC,WAAY,OACZC,OAAQ,UACRC,QAAS,OACTC,WAAY,YALS,yBAQjBC,GAAYjC,EAAAA,EAAAA,IAAI,CACpBuB,QAAS,oBACTW,OAAQ,YACRC,YAAaP,EAAAA,EAAAA,QAAAA,KACbJ,aAAc,MACdY,YAAa,OACb,CAAC9B,EAAAA,EAAAA,IAAQ,CAAEL,SAAU,OAAQsB,QAAS,oBANnB,yBASfc,GAAYrC,EAAAA,EAAAA,IAAI,CACpBuB,QAAS,oBACTW,OAAQ,YACRC,YAAaP,EAAAA,EAAAA,UACbA,MAAOA,EAAAA,EAAAA,UACPJ,aAAc,MACdY,YAAa,OAEb,CAAC9B,EAAAA,EAAAA,IAAQ,CAAEL,SAAU,OAAQsB,QAAS,sBARnB,yBAWfe,EAAY,EAKZC,EAAa,EAIbC,GAAaxC,EAAAA,EAAAA,IAAI,CACrB4B,MAAO,OACP3B,SAAU,SACV,CAACK,EAAAA,EAAAA,IAAQ,CAAEL,SAAU,WAHD,yBAMtB,OACEwC,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAAA,MAAAA,CAAKzC,IAAKD,IACR0C,EAAAA,EAAAA,IAAAA,MAAAA,CAAKzC,IAAKiB,IACRwB,EAAAA,EAAAA,IAAAA,KAAAA,CAAIzC,IAAKkB,GAAT,QAEDtB,EAAU8C,KAAI,CAACC,EAAaC,KAC3BH,EAAAA,EAAAA,IAAAA,UAAAA,CAASI,IAAKD,EAAO5C,IAAKmB,IACxBsB,EAAAA,EAAAA,IAAAA,UAAAA,CAASzC,IAAK2B,IACZc,EAAAA,EAAAA,IAAAA,OAAAA,CAAMzC,IAAKiC,GAAX,MACAQ,EAAAA,EAAAA,IAAAA,OAAAA,CAAMzC,IAAKsC,GAAeK,EAAK9C,YAEjC4C,EAAAA,EAAAA,IAAAA,MAAAA,CAAKzC,IAAKuC,IACRE,EAAAA,EAAAA,IAAAA,OAAAA,CAAMzC,IAAKqC,GAAX,MACAI,EAAAA,EAAAA,IAAAA,OAAAA,CAAMzC,IAAKwC,GAAaG,EAAK7C","sources":["webpack://gatsby-starter-hello-world/./src/components/qandA.tsx"],"sourcesContent":["import React from \"react\"\nimport { css } from \"@emotion/react\"\nimport color from \"../styles/color\"\nimport mq from \"../styles/mediaQuery\"\nimport DownArrowImage from \"../../static/images/down-arrow.png\"\nimport UpArrowImage from \"../../static/images/up-arrow.png\"\nimport QandABackgroundImage from \"../../static/images/qandaBg.png\"\n\ntype QandA = {\n  question: string\n  answer: string\n}\n\nconst questions: Array<QandA> = [\n  {\n    question: \"初期費用は必要ですか？\",\n    answer: \"No!\",\n  },\n  {\n    question: \"個人情報の取り扱いはどうなっていますか？\",\n    answer: \"Text!\",\n  },\n]\n\nexport default () => {\n  const Wrapper = css({\n    fontSize: \"1.7rem\",\n    marginTop: \"80px\",\n    \"details > summary::after\": {\n      content: `url(${DownArrowImage})`,\n      transform: \"scale(0.7)\",\n      [mq[0]]: { transform: \"scale(0.5)\", position: \"absolute\",right: \"20px\",top: \"16px\" },\n    },\n    \"details[open] > summary::after\": {\n      content: `url(${UpArrowImage})`,\n    },\n\n    backgroundImage: `url(${QandABackgroundImage})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundAttachment: \"fixed\",\n    backgroundPosition: \"right 0px bottom 0px\",\n    backgroundSize: \"30%\",\n  })\n\n  const topicWrapper = css({\n    textAlign: \"center\",\n    marginBottom: \"32px\",\n  })\n\n  const topicText = css({\n    fontSize: \"3rem\",\n  })\n\n  const drawerWrapper = css({\n    backgroundColor: \"white\",\n    position: \"relative\",\n    fontSize: \"3.2rem\",\n    width: \"60%\",\n    margin: \"0 auto\",\n    padding: \"32px\",\n    borderRadius: \"16px\",\n    boxShadow:\n      \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\",\n    marginBottom: \"24px\",\n\n    [mq[0]]: { width: \"100%\", fontSize: \"1.6rem\", padding: \"16px\" },\n  })\n\n  const drawerTitle = css({\n    color: color.primary.main,\n    userSelect: \"none\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    alignItems: \"baseline\",\n  })\n\n  const textQIcon = css({\n    padding: \"3px 14px 7px 14px\",\n    border: \"2px solid\",\n    borderColor: color.primary.main,\n    borderRadius: \"50%\",\n    marginRight: \"16px\",\n    [mq[0]]: { fontSize: \"12px\", padding: \"2px 7px 5px 8px\" },\n  })\n\n  const textAIcon = css({\n    padding: \"3px 15px 7px 15px\",\n    border: \"2px solid\",\n    borderColor: color.secondary,\n    color: color.secondary,\n    borderRadius: \"50%\",\n    marginRight: \"16px\",\n\n    [mq[0]]: { fontSize: \"12px\", padding: \"2px 7px 5px 7.5px\" },\n  })\n\n  const questionText = css({\n    display: \"inline-block\",\n    width: \"90%\",\n  })\n\n  const answerWrapper = css({\n    marginTop: \"32px\",\n  })\n\n  const answerText = css({\n    color: \"gray\",\n    fontSize: \"2.4rem\",\n    [mq[0]]: { fontSize: \"1.5rem\" },\n  })\n\n  return (\n    <>\n      <div css={Wrapper}>\n        <div css={topicWrapper}>\n          <h3 css={topicText}>Q&A</h3>\n        </div>\n        {questions.map((data: QandA, index: number) => (\n          <details key={index} css={drawerWrapper}>\n            <summary css={drawerTitle}>\n              <span css={textQIcon}>Q</span>\n              <span css={questionText}>{data.question}</span>\n            </summary>\n            <div css={answerWrapper}>\n              <span css={textAIcon}>A</span>\n              <span css={answerText}>{data.answer}</span>\n            </div>\n          </details>\n        ))}\n      </div>\n    </>\n  )\n}\n"],"names":["questions","question","answer","Wrapper","css","fontSize","marginTop","content","DownArrowImage","transform","mq","position","right","top","UpArrowImage","backgroundImage","QandABackgroundImage","backgroundRepeat","backgroundAttachment","backgroundPosition","backgroundSize","topicWrapper","topicText","drawerWrapper","backgroundColor","width","margin","padding","borderRadius","boxShadow","marginBottom","drawerTitle","color","userSelect","cursor","display","alignItems","textQIcon","border","borderColor","marginRight","textAIcon","questionText","answerWrapper","answerText","___EmotionJSX","map","data","index","key"],"sourceRoot":""}