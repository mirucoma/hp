{"version":3,"file":"305345b1-2f7fb687069cb12ed51c.js","mappings":"sNASA,mYAEA,SACE,MAAOA,EAAQC,IAAaC,EAAAA,EAAAA,aACrBC,EAAQC,IAAaF,EAAAA,EAAAA,UAAiB,GAOvCG,GAAgBC,EAAAA,EAAAA,IAAI,CACxBC,gBAAiBC,EAAAA,EAAAA,QAAAA,MACjBC,UAAW,SACXC,QAAS,QAHc,yBAMnBC,EAAW,EAKXC,GAAaN,EAAAA,EAAAA,IAAI,CACrBO,QAAS,OACTC,eAAgB,SAChBC,IAAK,OACL,CAACC,EAAAA,EAAAA,IAAQ,CAAEC,cAAe,SAAUF,IAAK,SAJrB,yBAOhBG,GAAOZ,EAAAA,EAAAA,IAAI,CACfC,gBAAiB,QACjBY,MAAO,MACPV,UAAW,OACXW,UACE,+EACFC,GAAI,CACFC,UAAW,QAEbC,GAAI,CACFC,SAAU,OACVd,QAAS,OACTe,UAAW,QAEb,WAAY,CACVlB,gBAAiBC,EAAAA,EAAAA,QAAAA,OAGnB,CAACQ,EAAAA,EAAAA,IAAQ,CACPG,MAAO,OACPZ,gBAAiB,cACjBa,UAAW,OACXC,GAAI,CACFR,QAAS,OACTE,IAAK,OACLW,UAAW,UAEbH,GAAI,CACFC,SAAU,OACVhB,MAAO,OACPE,QAAS,MACTiB,OAAQ,iBACRC,aAAc,OACdC,KAAM,eAjCI,yBAsCVC,GAAaxB,EAAAA,EAAAA,IAAI,CACrByB,WAAY,YACZC,YAAaxB,EAAAA,EAAAA,QAAAA,KAAqB,aAClCA,MAAOA,EAAAA,EAAAA,QAAAA,KAAqB,eAHR,yBAMhByB,GAAgB3B,EAAAA,EAAAA,IAAI,CACxBC,gBAAiB,QACjBG,QAAS,OACTS,MAAO,MACPe,SAAU,QACVC,OAAQ,OACRf,UACE,+EACF,CAACJ,EAAAA,EAAAA,IAAQ,CACPG,MAAO,SATc,yBAanBiB,EAAU,EAMVC,EAAgB,EAOhBC,GAAahC,EAAAA,EAAAA,IAAI,CACrBO,QAAS,SACT0B,aAAc,aACdP,YAAaxB,EAAAA,EAAAA,QAAAA,MAHO,yBAMhBgC,EAAS,EAITC,EAAc,EAOdC,GAASpC,EAAAA,EAAAA,IAAI,CACjBC,gBAAiB,cACjBoC,OAAQ,UACRC,QAAS,OACTC,WAAY,OACZrB,SAAU,SACVG,OAAQ,YACRjB,QAAS,MACToC,WAAY,MACZtC,MAAOA,EAAAA,EAAAA,QAAAA,MATS,yBAYlB,OACEuC,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAAA,MAAAA,CAAKzC,IAAKD,IACR0C,EAAAA,EAAAA,IAAAA,IAAAA,CAAGzC,IAAKK,GAAR,SACAoC,EAAAA,EAAAA,IAAAA,MAAAA,CAAKzC,IAAKM,IACRmC,EAAAA,EAAAA,IAAAA,MAAAA,CAAKzC,IAAKY,IACR6B,EAAAA,EAAAA,IAAAA,KAAAA,KACGC,EAAAA,GAAAA,KAAU,CAACC,EAAaC,KACvBH,EAAAA,EAAAA,IAAAA,KAAAA,CACEzC,IAAK4C,GAAS/C,EAAS2B,EAAa,GACpCqB,QAAS,IApIGD,CAAAA,IAC1B9C,EAAU8C,GACVlD,MAAAA,GAAAA,EAAQoD,QAAQ,EAAG,MAkIUC,CAAmBH,GAClCD,IAAKC,GAEJD,QAMTF,EAAAA,EAAAA,IAAAA,MAAAA,CAAKzC,IAAK2B,IACRc,EAAAA,EAAAA,IAACO,EAAAA,GAAD,CACEC,cAAe,EACfC,QAAS,CAACC,EAAAA,IACVC,WAAY,CACVC,OAAQ,QACRC,OAAQ,SAEVC,aAAc,GACdC,WAAY,CAAEC,WAAW,GACzBC,SAAUC,GAAQhE,EAAUgE,IAE3BC,EAAAA,GAAU/D,GAAQgE,KAAI,CAACF,EAAMf,KAC5BH,EAAAA,EAAAA,IAACqB,EAAAA,GAAD,CAAanB,IAAKC,IAChBH,EAAAA,EAAAA,IAAAA,MAAAA,CAAKzC,IAAK8B,EAAYiC,IAAKJ,EAAKK,MAAOC,IAAI,MAE3CxB,EAAAA,EAAAA,IAAAA,MAAAA,CAAKzC,IAAK+B,IACRU,EAAAA,EAAAA,IAAAA,IAAAA,CAAGzC,IAAKgC,GAAa2B,EAAKO,QAC1BzB,EAAAA,EAAAA,IAAAA,IAAAA,CAAGzC,IAAKkC,GAAYyB,EAAKQ,cAMjC1B,EAAAA,EAAAA,IAAAA,MAAAA,CAAKzC,IAAKmC,IACRM,EAAAA,EAAAA,IAAAA,SAAAA,CAAQ2B,UAAU,OAAOpE,IAAKoC,GAA9B,QAGAK,EAAAA,EAAAA,IAAAA,SAAAA,CAAQ2B,UAAU,OAAOpE,IAAKoC,GAA9B","sources":["webpack://gatsby-starter-hello-world/./src/components/detail.tsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport { css } from \"@emotion/react\"\nimport color from \"../styles/color\"\nimport mq from \"../styles/mediaQuery\"\nimport { Navigation } from \"swiper\"\n\nimport { Swiper, SwiperSlide } from \"swiper/react\"\nimport { Swiper as SwiperType } from \"swiper/types\"\n\nimport { plans, slideData } from \"../datas/content\"\n\nexport default () => {\n  const [swiper, setSwiper] = useState<SwiperType>()\n  const [active, setActive] = useState<number>(0)\n\n  const handleChangeActive = (index: number) => {\n    setActive(index)\n    swiper?.slideTo(0, 500)\n  }\n\n  const detailWrapper = css({\n    backgroundColor: color.primary.light,\n    textAlign: \"center\",\n    padding: \"16px\",\n  })\n\n  const detailTitle = css({\n    fontSize: \"3rem\",\n    padding: \"24px\",\n  })\n\n  const detailBody = css({\n    display: \"flex\",\n    justifyContent: \"center\",\n    gap: \"48px\",\n    [mq[0]]: { flexDirection: \"column\", gap: \"16px\" },\n  })\n\n  const list = css({\n    backgroundColor: \"white\",\n    width: \"32%\",\n    textAlign: \"left\",\n    boxShadow:\n      \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\",\n    ul: {\n      listStyle: \"none\",\n    },\n    li: {\n      fontSize: \"2rem\",\n      padding: \"24px\",\n      marginTop: \"16px\",\n    },\n    \"li:hover\": {\n      backgroundColor: color.primary.light,\n    },\n\n    [mq[0]]: {\n      width: \"100%\",\n      backgroundColor: \"transparent\",\n      boxShadow: \"none\",\n      ul: {\n        display: \"flex\",\n        gap: \"16px\",\n        overflowX: \"scroll\",\n      },\n      li: {\n        fontSize: \"1rem\",\n        color: \"gray\",\n        padding: \"8px\",\n        border: \"1px solid gray\",\n        borderRadius: \"14px\",\n        flex: \" 0 0 auto\",\n      },\n    },\n  })\n\n  const activePlan = css({\n    borderLeft: \"4px solid\",\n    borderColor: color.primary.main + \"!important\",\n    color: color.primary.main + \" !important\",\n  })\n\n  const sliderWrapper = css({\n    backgroundColor: \"white\",\n    padding: \"16px\",\n    width: \"68%\",\n    maxWidth: \"880px\",\n    height: \"auto\",\n    boxShadow:\n      \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\",\n    [mq[0]]: {\n      width: \"100%\",\n    },\n  })\n\n  const slideImage = css({\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"auto\",\n  })\n\n  const slideTextWrapper = css({\n    p: { fontSize: \"2rem\" },\n    textAlign: \"left\",\n    paddingBottom: \"24px\",\n    borderBottom: \"1px dashed rgba(0, 0, 0, 0.12)\",\n  })\n\n  const slideTitle = css({\n    display: \"inline\",\n    borderBottom: \"4px double\",\n    borderColor: color.primary.main,\n  })\n\n  const slideText = css({\n    padding: \"8px\",\n  })\n\n  const buttonWraopped = css({\n    textAlign: \"right\",\n    \".swiper-button-disabled\": {\n      color: \"gray\",\n    },\n    marginTop: \"8px\",\n  })\n  const button = css({\n    backgroundColor: \"transparent\",\n    cursor: \"pointer\",\n    outline: \"none\",\n    appearance: \"none\",\n    fontSize: \"1.7rem\",\n    border: \"1px solid\",\n    padding: \"4px\",\n    marginLeft: \"8px\",\n    color: color.primary.main,\n  })\n\n  return (\n    <>\n      <div css={detailWrapper}>\n        <p css={detailTitle}>機能紹介</p>\n        <div css={detailBody}>\n          <div css={list}>\n            <ul>\n              {plans.map((key: string, index: number) => (\n                <li\n                  css={index == active ? activePlan : \"\"}\n                  onClick={() => handleChangeActive(index)}\n                  key={index}\n                >\n                  {key}\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div css={sliderWrapper}>\n            <Swiper\n              slidesPerView={1}\n              modules={[Navigation]}\n              navigation={{\n                prevEl: \".prev\",\n                nextEl: \".next\",\n              }}\n              spaceBetween={50}\n              pagination={{ clickable: true }}\n              onSwiper={data => setSwiper(data)}\n            >\n              {slideData[active].map((data, index) => (\n                <SwiperSlide key={index}>\n                  <img css={slideImage} src={data.image} alt=\"\" />\n\n                  <div css={slideTextWrapper}>\n                    <p css={slideTitle}>{data.title}</p>\n                    <p css={slideText}>{data.detail}</p>\n                  </div>\n                </SwiperSlide>\n              ))}\n            </Swiper>\n\n            <div css={buttonWraopped}>\n              <button className=\"prev\" css={button}>\n                ←前へ\n              </button>\n              <button className=\"next\" css={button}>\n                次へ→\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n"],"names":["swiper","setSwiper","useState","active","setActive","detailWrapper","css","backgroundColor","color","textAlign","padding","detailTitle","detailBody","display","justifyContent","gap","mq","flexDirection","list","width","boxShadow","ul","listStyle","li","fontSize","marginTop","overflowX","border","borderRadius","flex","activePlan","borderLeft","borderColor","sliderWrapper","maxWidth","height","slideImage","slideTextWrapper","slideTitle","borderBottom","slideText","buttonWraopped","button","cursor","outline","appearance","marginLeft","___EmotionJSX","plans","key","index","onClick","slideTo","handleChangeActive","Swiper","slidesPerView","modules","Navigation","navigation","prevEl","nextEl","spaceBetween","pagination","clickable","onSwiper","data","slideData","map","SwiperSlide","src","image","alt","title","detail","className"],"sourceRoot":""}